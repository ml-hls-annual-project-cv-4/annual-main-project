name: CD

on:
  push:
    branches: [ "main" ]
  #pull_request:
  #  branches: [ "main" ]

jobs:
        
  deploying-app:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
    - uses: actions/checkout@v3
    
    - name: install ssh keys
      run: |
        install -m 600 -D /dev/null ~/.ssh/id_rsa
        echo "${{ secrets.SSH_PRIVATE_KEY_DEPLOYER }}" > ~/.ssh/id_rsa
        eval $(ssh-agent -s)
        ssh-add ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.SSH_HOST }} > ~/.ssh/known_hosts
        
    - name: pull repository
      run: |
        ssh ${{ secrets.SSH_USER_DEPLOYER }}@${{ secrets.SSH_HOST }} "\
        cd ${{ secrets.WORK_DIR }} \
        && git checkout ${{ secrets.MAIN_BRANCH }} \
        && git stash \
        && git pull origin \
        && exit"

    - name: build predict_service
      run: |
        ssh ${{ secrets.SSH_USER_DEPLOYER }}@${{ secrets.SSH_HOST }} "\
        cd ${{ secrets.WORK_DIR }} \
        && echo 'start key' \
        && echo '${{ secrets.SSL_KEY }}' > api/private.key \
        && echo '${{ secrets.SSL_CERT }}' > api/cert.crt \
        && ls api/ \
        && cp -r dockerfiles/predict_service/* . \
        && docker build -t predict_service . \
        && rm Dockerfile requirements.txt README.md api/private.key api/cert.crt \
        && exit"
    
    - name: build request_imitation
      run: |
        ssh ${{ secrets.SSH_USER_DEPLOYER }}@${{ secrets.SSH_HOST }} "\
        cd ${{ secrets.WORK_DIR }} \
        && cp -r dockerfiles/requests_imitation/* . \
        && docker build -t requests_imitation . \
        && rm Dockerfile requirements.txt README.md \
        && exit"

    - name: running compose
      run: |
        ssh ${{ secrets.SSH_USER_DEPLOYER }}@${{ secrets.SSH_HOST }} "\
        cd ${{ secrets.WORK_DIR }} \
        && cd dockerfiles/app_compose/ \
        && docker compose down \
        && docker compose up -d \
        && exit"

    - name: cleanup
      run: rm -rf ~/.ssh
    
