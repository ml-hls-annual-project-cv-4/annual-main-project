name: Common CI

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

jobs:
  testing:
    
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.8"
      - name: Installing dependecies
        run: |
          python -m pip install --upgrade pip
          pip install pytest-cov
          pip install opencv-python-headless
          pip install scikit-image
          pip install lightgbm
          pip install -r api/requirements.txt
      - name: Running tests
        run: |
          PYTHONPATH=src python3 -m pytest --cov src tests        

#   building-pred-service:
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v3
#     - name: Build pred_service image
#       run: |
#         cd dockerfiles/predict_service/
#         docker build -t predict_service .
#     - name: Log in to registry
#           # This is where you will update the personal access token to GITHUB_TOKEN
#       run: |
#         echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin
#     - name: Push image
#       run: |
#         docker push predict_service
        
  building-requests-imitation:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: write
    steps:
    - uses: actions/checkout@v3
    - name: Build pred_service image
      run: |
        cd dockerfiles/requests_imitation
        docker build -t requests_imitation .
    - name: Log in to registry
      run: |
        echo "${{ secrets.GITHUB_TOKEN }}" | docker login -u max-kovalenko --password-stdin ghcr.io
    - name: Push image
      run: |
        IMAGE_ID=ghcr.io/${{ github.repository_owner }}/requests_imitation
        # Change all uppercase to lowercase
        IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
        # Strip git ref prefix from version
        VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
        # Strip "v" prefix from tag name
        [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
        # Use Docker `latest` tag convention
        [ "$VERSION" == "main" ] && VERSION=latest
        echo IMAGE_ID=$IMAGE_ID
        echo VERSION=$VERSION
        docker tag requests_imitation $IMAGE_ID:$VERSION
        docker push $IMAGE_ID:$VERSION
        
